mysql -u root -p
CREATE DATABASE database_final_project;
USE database_final_project;

Database Table=====================================================

CREATE TABLE student ( 
    student_ID VARCHAR(255) NOT NULL, 
    name VARCHAR(255) NOT NULL, 
    PRIMARY KEY (student_ID) 
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `course` (
  `course_ID` varchar(255) NOT NULL,
  `course_name` varchar(255) NOT NULL,
  `dept_name` varchar(255) NOT NULL,
  `credit` int(11) NOT NULL,
  `required` tinyint(1) DEFAULT NULL,
  `core` tinyint(1) DEFAULT NULL,
  `field` enum('人格','民主','全球','歷史','美學','科技','自然','經典') DEFAULT NULL
  PRIMARY KEY (course_ID) 
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_general_ci;

CREATE TABLE `my_course` ( 
  `student_ID` VARCHAR(255) NOT NULL, 
  `course_ID` VARCHAR(255) NOT NULL, 
  PRIMARY KEY (`student_ID`, `course_ID`), 
  FOREIGN KEY (`student_ID`) REFERENCES `student`(`student_ID`), 
  FOREIGN KEY (`course_ID`) REFERENCES `course`(`course_ID`) 
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

Function========================================================

CREATE FUNCTION is_valid_course(courseID VARCHAR(20))
RETURNS BOOLEAN
DETERMINISTIC
BEGIN
    DECLARE course_count INT;
    
    -- 檢查課號是否存在於 course 
    SELECT COUNT(*) INTO course_count
    FROM course
    WHERE course_ID = courseID;

    RETURN course_count > 0; -- 如果存在則回傳 TRUE，否則回傳 FALSE
END;

Procedure========================================================

CREATE PROCEDURE add_multiple_courses(
    IN studentID VARCHAR(20),
    IN courses TEXT
)
BEGIN
    DECLARE courseID VARCHAR(20);
    DECLARE cur_pos INT DEFAULT 1;
    DECLARE delimiter_pos INT;
    DECLARE invalid_courses TEXT DEFAULT ''; -- 用來記錄無效課號
    DECLARE has_invalid_courses BOOLEAN DEFAULT FALSE;

    CREATE TEMPORARY TABLE temp_courses (course_ID VARCHAR(20));

    -- 將課號分割並處理
    WHILE cur_pos <= LENGTH(courses) DO
        SET delimiter_pos = LOCATE(',', courses, cur_pos);
        IF delimiter_pos = 0 THEN
            SET delimiter_pos = LENGTH(courses) + 1;
        END IF;

        SET courseID = TRIM(SUBSTRING(courses, cur_pos, delimiter_pos - cur_pos));

        -- 使用 FUNCTION 檢查課號是否有效
        IF is_valid_course(courseID) THEN
            INSERT INTO temp_courses (course_ID) VALUES (courseID);
        ELSE
            SET has_invalid_courses = TRUE;
            SET invalid_courses = CONCAT_WS(',', invalid_courses, courseID); -- 累加無效課號
        END IF;

        SET cur_pos = delimiter_pos + 1;
    END WHILE;

    -- 如果有無效課號，拋出錯誤訊息
    IF has_invalid_courses THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = CONCAT('無效的課號：', invalid_courses);
    END IF;

    -- 插入有效的課程到 my_course
    INSERT INTO my_course (student_ID, course_ID)
    SELECT studentID, course_ID
    FROM temp_courses;

    DROP TEMPORARY TABLE temp_courses;
END;
